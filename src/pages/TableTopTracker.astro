---
import BaseLayout from '../layouts/baseLayout.astro';
import Hero from '../components/Hero/Hero.astro';
import Description from '../components/Hero/Description.astro';
import ProjectDemo from '../components/projects/projectDemo.astro';
import IframeComponent from '../components/projects/iframme.astro';
import ChallengesSection from '../components/projects/challengesSection.astro';
import ReflectionsSection from '../components/projects/reflectionsSection.astro';
import DevDiary from '../components/projects/devDiary.astro';

// Import project images
import tableTopImg from '../assets/Projects/tabletoptracker/TableTopTracker.jpg';
import tableTopScreenshot1 from '../assets/Projects/tabletoptracker/Screenshot 2025-07-22 092027.png';
import tableTopScreenshot2 from '../assets/Projects/tabletoptracker/Screenshot 2025-07-22 092138.png';
import tableTopVideo from '../assets/Projects/tabletoptracker/Screen Recording 2025-07-22 092300.mp4';

const pageTitle = "TableTop Tracker";

// Define challenges data
const challenges = [
    {
        icon: "üíæ",
        title:  "Player prefs issues",
        description: "I struggled to get the names to save correctly using PlayerPrefs. Hence they would not display correctly on the main page. I had to debug the PlayerPrefs to ensure it was saving and loading the names correctly."
    },
    {
        icon: "‚öñÔ∏è",
        title: "Game Rules Implementation",
        description: "I had to implement a system to enforce the game rules, such as turn counter and score maximums and implement ways to prevent players going above or below these limits."
    }
];

// Define lessons/reflections data  
const lessons = [
    {
        icon: "üõ†Ô∏è",
        title: "Appropriate language use",
        description: "Using unity is what i was most comfortable with, but I could have used other languages or frameworks to achieve the same result. I should have considered using Flutter(Dart) or a C# Framework for a more robust solution."
    },
    {
        icon: "üìã",
        title: "A Proper Plan",
        description: "I should have created a more detailed plan and requirements before starting the project. This would have helped me to stay on track and avoid scope creep and would allow me to add more game rules and features as it proggressed."
    },
    {
        icon: "üñåÔ∏è",
        title: "User Experience Design",
        description: "The interface could have been more intuitive with better visual feedback. Adding clear indicators for turn progression, score limits, and input validation would greatly improve the user experience."
    },
    {
        icon: "üèóÔ∏è",
        title: "Code Architecture",
        description: "Implementing a more modular architecture with separate classes for game rules, player management, and UI would have made the code more maintainable and easier to extend with new features. As my current script is a bit of a monolith and could be broken down into smaller, more manageable components."
    },
    {
        icon: "üíΩ ",
        title: "Data Persistence Strategy",
        description: "Using PlayerPrefs was a quick solution, but implementing a more robust data persistence system (JSON files) would have provided better data management and backup capabilities."
    },
    {
        icon: "üî¨",
        title: "Testing and Validation",
        description: "I should have implemented more comprehensive testing, especially for edge cases like maximum scores, turn limits, and invalid inputs to ensure the application behaves correctly in all scenarios."
    }
];
---
<BaseLayout pageTitle={pageTitle} backgroundVariant="app">
    <Hero 
        title="TableTop Tracker"
        subtitle="A Unity app to track scores in tabletop games"
        showImage={true}
        image={tableTopImg.src}
        altText="TableTop Tracker application screenshot"
    />
    <Description 
        description="TableTop Tracker is a Unity application designed for Warhammer 40k to help tabletop gamers organize and track their gaming sessions."
        showSkills={true}
        skillsTitle="Technologies Used"
        skills={["Unity", "C#", "Unity UI Toolkit", "User Interface Design", "Score Tracking Systems", "Event-Driven Programming", "Player Prefs"]}
        id="about"
    />
    <ProjectDemo 
        id="projects"
        projectTitle='TableTop Tracker'
        githubUrl="https://github.com/Ghosthi1/TableTopTracker"
        itchUrl="https://ghosthi.itch.io/table-top-tracker"
        media={[
            {
                type: 'video',
                src: tableTopVideo,
                alt: 'TableTop Tracker gameplay demonstration',
                caption: 'Demonstration showing core features'
            },
            {
                type: 'image',
                src: tableTopImg.src,
                alt: 'TableTop Tracker interface',
                caption: 'Logo for the application'
            },
            {
                type: 'image',
                src: tableTopScreenshot1.src,
                alt: 'TableTop Tracker screenshot 1',
                caption: 'Name input page'
            },
            {
                type: 'image',
                src: tableTopScreenshot2.src,
                alt: 'TableTop Tracker screenshot 2', 
                caption: 'Main page showing score tracking'
            }
        ]}
    />
    <IframeComponent 
        embedUrl="https://itch.io/embed-upload/12859475?color=333333"
        fallbackUrl="https://ghosthi.itch.io/table-top-tracker"
        title="TableTop Tracker"
        width="100%"
        height="700px"
        id="tabletop-iframe"
    />
    <ChallengesSection challenges={challenges} />

    <ReflectionsSection 
        lessons={lessons}
        futureGoals='If I was to revisit this project, I would rebuild it from the ground up using a more robust framework like Flutter or a C# desktop framework to allow for better cross-platform deployment. Key improvements would include: implementing persistent data storage; designing a more intuitive UI; adding support for multiple game types beyond Warhammer 40k with customizable rule sets; integrating syncing so each user can have their own instance; '
    />

</BaseLayout>
